<Window x:Class="DocumentationGenerator.MVVM.View.MainView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d" WindowStyle="None" AllowsTransparency="True"
        Title="MainView" Height="800" Width="1000">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="50"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="200"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>

        <Border Grid.ColumnSpan="2" BorderBrush="WhiteSmoke" Background="WhiteSmoke" MouseDown="OnChromeBarMouseDown" Grid.Row="0">
            <Grid>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                    <Image Source="/Icons/Doc Gen Icon Rounded Corners.png" Margin="3"/>
                    <Button Style="{DynamicResource ChromeBarToolButtons}" x:Name="FileButton" Content="File.." Click="OnFileButtonClick"/>
                    <Button Style="{DynamicResource ChromeBarToolButtons}" Content="Setings" Command="{Binding OpenSettingsMenuCommand}"/>
                    <Button Style="{DynamicResource ChromeBarToolButtons}" Content="Help"/>
                </StackPanel>
                <!-- Window buttons -->
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                    <Button Style="{DynamicResource ChromeBarDefaultButtons}" Content="_" Click="OnMinimizeButtonClicked"/>
                    <Button Style="{DynamicResource ChromeBarDefaultButtons}" x:Name="MaximiseButton" Content="[  ]" Click="OnMaximizeButtonClicked"/>
                    <Button Style="{DynamicResource WindowCloseButton}" Content="X" Click="OnCloseButtonClicked"/>
                </StackPanel>
                
            </Grid>
        </Border>


        <!-- File Menu Popup -->
        <Popup Grid.ColumnSpan="2" x:Name="FilePopup" Style="{DynamicResource DefaultPopupMenu}" PlacementTarget="{Binding ElementName=FileButton}"
               Placement="Bottom" AllowsTransparency="True" StaysOpen="False" PopupAnimation="Scroll">
            <Border>
                <StackPanel>
                    <Button Style="{DynamicResource PopupMenuButtons}" Content="Load File/s" ToolTip="Load a file(s) from a directory." Command="{Binding LoadFileCommand}"/>
                    <Button Style="{DynamicResource PopupMenuButtons}" Content="Load Directory" ToolTip="Load a directory of source files." Command="{Binding LoadDirectoryCommand}"/>
                    <Button x:Name="ExportButton" Style="{DynamicResource PopupMenuButtons}" Content="Export >" Click="OnExportButtonClick"/>
                    <Button Style="{DynamicResource PopupMenuButtons}" Content="Clear Docs" ToolTip="Click to clear ALL DATA that has been loaded." Command="{Binding ClearDocsCommand}"/>
                    <Separator/>
                    <Button Style="{DynamicResource PopupMenuButtons}" Content="Exit" Command="{Binding ExitAppCommand}"/>
                </StackPanel>
            </Border>
        </Popup>

        <!-- Export Menu Popup -->
        <Popup Grid.ColumnSpan="2" x:Name="ExportPopup" Style="{DynamicResource DefaultPopupMenu}" PlacementTarget="{Binding ElementName=ExportButton}"
               Placement="Right" AllowsTransparency="True" StaysOpen="False" PopupAnimation="Fade">
            <Border BorderBrush="Black" BorderThickness="1">
                <StackPanel>
                    <Button Style="{DynamicResource PopupMenuButtons}" Content="Save to PDF." ToolTip="Click to save ALL DATA that is loaded into a PDF, at any location you want." Command="{Binding ExportPDFDocumentationCommand}" Click="OnExportMenuButtonClicked"/>
                    <Button Style="{DynamicResource PopupMenuButtons}" Content="Save to HTML." ToolTip="Click if you want to save the documentation in a website format which can be ready to host." Command="{Binding ExportHTMLDocumentationCommand}" Click="OnExportMenuButtonClicked"/>
                </StackPanel>
            </Border>
        </Popup>

        <Label Grid.ColumnSpan="2" Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Top"
               HorizontalContentAlignment="Left" VerticalContentAlignment="Center"
               FontWeight="Bold" FontSize="20" 
               Margin="10,10" Content="{Binding FileName}"/>
        
        <Label Content="Project Name:" Grid.Row="1" HorizontalAlignment="Left" VerticalAlignment="Top"
               Margin="10,50" FontSize="20"></Label>

        <Label Content="Project Description:" Grid.Row="1" HorizontalAlignment="Left" VerticalAlignment="Top"
               Margin="10,95" FontSize="20"></Label>

        <TextBox Grid.Row="1" Grid.Column="2" HorizontalAlignment="Stretch" VerticalAlignment="Top"
                 Height="30" Margin="10,50" Text="{Binding ProjectName}" PreviewTextInput="OnTextBoxPreviewTextInput" ></TextBox>

        <TextBox Grid.Row="1" Grid.Column="2" HorizontalAlignment="Stretch" VerticalAlignment="Top"
                 Height="30" Margin="10,95" Text="{Binding ProjectDescription}" PreviewTextInput="OnTextBoxPreviewTextInput"></TextBox>

        <ScrollViewer Grid.ColumnSpan="2" Grid.Row="1"  Margin="10,150,10,10">
            <RichTextBox IsReadOnly="True" x:Name="myRichTextBox" VerticalScrollBarVisibility="Auto" Grid.Row="1" Margin="10,10"/>
        </ScrollViewer>
        
    </Grid>
</Window>
